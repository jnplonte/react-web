{"version":3,"sources":["layouts/main/components/topbar/topbar.style.tsx","layouts/main/components/topbar/topbar.component.tsx"],"names":["topbarStyle","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","lang","marginLeft","color","palette","white","Topbar","props","className","onSignOut","onSidebarOpen","classes","useTranslation","i18n","t","useState","localeEl","setLocaleEl","localeOpen","Boolean","anchorEl","setAnchorEl","anchorOpen","localeClose","anchorClose","setLocale","locale","lngKey","process","changeLanguage","window","localStorage","setItem","AppBar","clsx","position","Toolbar","Hidden","lgUp","IconButton","onClick","to","alt","title","src","smDown","Typography","variant","Button","aria-haspopup","event","element","currentTarget","language","toUpperCase","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","component","Link"],"mappings":"0TAEaA,EAAcC,aAAW,SAACC,GAAD,MAAiB,CACnDC,KAAM,GACNC,SAAU,CACRA,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,KAAM,CACJC,WAAYP,EAAMK,QAAQ,KAC1BG,MAAOR,EAAMS,QAAQC,W,OCiHZC,UA7GA,SAACC,GAAgB,IACvBC,EAAwCD,EAAxCC,UAAWC,EAA6BF,EAA7BE,UAAWC,EAAkBH,EAAlBG,cAExBC,EAAUlB,IAHc,EAIVmB,cAAZC,EAJsB,EAItBA,KAAMC,EAJgB,EAIhBA,EAJgB,EAMEC,mBAA6B,MAN/B,mBAMvBC,EANuB,KAMbC,EANa,KAOxBC,EAAaC,QAAQH,GAPG,EASED,mBAA6B,MAT/B,mBASvBK,EATuB,KASbC,EATa,KAUxBC,EAAaH,QAAQC,GAYrBG,EAAc,WACnBN,EAAY,OAGPO,EAAc,WACnBH,EAAY,OAGPI,EAAY,WAA4B,IAA3BC,EAA0B,uDAAT,KAC7BC,EAAiBC,SAEvBf,EAAKgB,eAAeH,GACpBI,OAAOC,aAAaC,QAAQL,EAAQD,GACpCH,KAGD,OACC,cAACU,EAAA,EAAD,CAAQzB,UAAW0B,YAAK,aAAcvB,EAAQf,KAAMY,GAAYL,MAAM,UAAUgC,SAAS,QAAzF,SACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACC,cAACC,EAAA,EAAD,CAAY/B,UAAWG,EAAQb,WAAYK,MAAM,UAAUqC,QAAS9B,EAApE,SACC,cAAC,IAAD,QAGF,eAAC,IAAD,CAAM+B,GAAG,IAAT,UACC,qBACCjC,UAAU,MACVkC,IAAKd,wBACLe,MAAOf,wBACPgB,IAAKhB,gCAEN,cAACS,EAAA,EAAD,CAAQQ,QAAM,EAAd,SACC,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKvC,UAAU,QAAnC,SACEoB,+BAIJ,qBAAKpB,UAAWG,EAAQd,WACxB,eAACmD,EAAA,EAAD,CAAQC,gBAAc,OAAOT,QAhDX,SAACU,GACrB,IAAMC,EAAUD,EAAME,cACtBnC,EAAYkC,IA8C0ChD,MAAM,UAA1D,UACC,cAAC,IAAD,IACA,cAAC2C,EAAA,EAAD,CAAYC,QAAQ,QAAQvC,UAAWG,EAAQV,KAA/C,SACEY,EAAKwC,SAASC,gBAEhB,cAAC,IAAD,OAED,eAACC,EAAA,EAAD,CACCC,GAAG,gBACHpC,SAAUJ,EACVyC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDG,KAAM5C,EACN6C,QAASxC,EAPV,UASC,cAACyC,EAAA,EAAD,CAAUxB,QAAS,kBAAMf,EAAU,OAAnC,qBACA,cAACuC,EAAA,EAAD,CAAUxB,QAAS,kBAAMf,EAAU,OAAnC,wBAGD,cAACc,EAAA,EAAD,CAAYU,gBAAc,OAAOT,QA/DjB,SAACU,GACnB,IAAMC,EAAUD,EAAME,cACtB/B,EAAY8B,IA6D4ChD,MAAM,UAA5D,SACC,cAAC,IAAD,MAED,eAACoD,EAAA,EAAD,CACCC,GAAG,iBACHpC,SAAUA,EACVqC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDG,KAAMxC,EACNyC,QAASvC,EAPV,UASC,cAACwC,EAAA,EAAD,CAAUxB,QAAShB,EAAayC,UAAWC,IAAMzB,GAAG,WAApD,SACE3B,EAAE,kBAEJ,cAACkD,EAAA,EAAD,CAAUxB,QAAS/B,EAAnB,SAA+BK,EAAE","file":"static/js/29.84f5a7d7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/styles';\n\nexport const topbarStyle = makeStyles((theme: any) => ({\n    root: {},\n    flexGrow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(1),\n    },\n    lang: {\n      marginLeft: theme.spacing(0.25),\n      color: theme.palette.white,\n    },\n}));\n","import React, { MouseEvent, useState } from 'react';\n\nimport * as PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\n\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar, Hidden, IconButton, Button, Typography, Menu, MenuItem } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport GTranslate from '@material-ui/icons/GTranslateOutlined';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport { topbarStyle } from './topbar.style';\n\nconst Topbar = (props: any) => {\n\tconst { className, onSignOut, onSidebarOpen } = props;\n\n\tconst classes = topbarStyle();\n\tconst { i18n, t } = useTranslation();\n\n\tconst [localeEl, setLocaleEl] = useState<null | HTMLElement>(null);\n\tconst localeOpen = Boolean(localeEl);\n\n\tconst [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\tconst anchorOpen = Boolean(anchorEl);\n\n\tconst handleLocale = (event: MouseEvent) => {\n\t\tconst element = event.currentTarget as HTMLElement;\n\t\tsetLocaleEl(element);\n\t};\n\n\tconst handleMenu = (event: MouseEvent) => {\n\t\tconst element = event.currentTarget as HTMLElement;\n\t\tsetAnchorEl(element);\n\t};\n\n\tconst localeClose = () => {\n\t\tsetLocaleEl(null);\n\t};\n\n\tconst anchorClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst setLocale = (locale: string = 'en') => {\n\t\tconst lngKey: string = process.env.REACT_APP_LOCALE || '';\n\n\t\ti18n.changeLanguage(locale);\n\t\twindow.localStorage.setItem(lngKey, locale);\n\t\tlocaleClose();\n\t};\n\n\treturn (\n\t\t<AppBar className={clsx('app-header', classes.root, className)} color=\"primary\" position=\"fixed\">\n\t\t\t<Toolbar>\n\t\t\t\t<Hidden lgUp>\n\t\t\t\t\t<IconButton className={classes.menuButton} color=\"inherit\" onClick={onSidebarOpen}>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Hidden>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"img\"\n\t\t\t\t\t\talt={process.env.REACT_APP_NAME}\n\t\t\t\t\t\ttitle={process.env.REACT_APP_NAME}\n\t\t\t\t\t\tsrc={process.env.REACT_APP_LOGO}\n\t\t\t\t\t/>\n\t\t\t\t\t<Hidden smDown>\n\t\t\t\t\t\t<Typography variant=\"h6\" className=\"title\">\n\t\t\t\t\t\t\t{process.env.REACT_APP_NAME}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Hidden>\n\t\t\t\t</Link>\n\t\t\t\t<div className={classes.flexGrow} />\n\t\t\t\t<Button aria-haspopup=\"true\" onClick={handleLocale} color=\"inherit\">\n\t\t\t\t\t<GTranslate />\n\t\t\t\t\t<Typography variant=\"body1\" className={classes.lang}>\n\t\t\t\t\t\t{i18n.language.toUpperCase()}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ArrowDropDownIcon />\n\t\t\t\t</Button>\n\t\t\t\t<Menu\n\t\t\t\t\tid=\"locale-appbar\"\n\t\t\t\t\tanchorEl={localeEl}\n\t\t\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\t\t\tkeepMounted\n\t\t\t\t\ttransformOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\t\t\topen={localeOpen}\n\t\t\t\t\tonClose={localeClose}\n\t\t\t\t>\n\t\t\t\t\t<MenuItem onClick={() => setLocale('en')}>ENGLISH</MenuItem>\n\t\t\t\t\t<MenuItem onClick={() => setLocale('tg')}>TAGALOG</MenuItem>\n\t\t\t\t</Menu>\n\n\t\t\t\t<IconButton aria-haspopup=\"true\" onClick={handleMenu} color=\"inherit\">\n\t\t\t\t\t<AccountCircle />\n\t\t\t\t</IconButton>\n\t\t\t\t<Menu\n\t\t\t\t\tid=\"account-appbar\"\n\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\t\t\tkeepMounted\n\t\t\t\t\ttransformOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\t\t\topen={anchorOpen}\n\t\t\t\t\tonClose={anchorClose}\n\t\t\t\t>\n\t\t\t\t\t<MenuItem onClick={anchorClose} component={Link} to=\"/account\">\n\t\t\t\t\t\t{t('menu.account')}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<MenuItem onClick={onSignOut}>{t('menu.signOut')}</MenuItem>\n\t\t\t\t</Menu>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n};\n\nTopbar.propTypes = {\n\tclassName: PropTypes.string,\n\tonSidebarOpen: PropTypes.func,\n\tonSignOut: PropTypes.func,\n\tid: PropTypes.string,\n};\n\nexport default Topbar;\n"],"sourceRoot":""}