{"version":3,"sources":["views/user/components/user-table/user-table.style.tsx","views/user/components/user-table/user-table.component.tsx"],"names":["userTableStyles","makeStyles","theme","root","overflowX","table","minWidth","dialog","modal","withRouter","props","className","refreshData","data","pagination","limit","history","classes","t","useTranslation","GetAuth","token","authData","setNotificationData","GetSiteInformation","userRequest","useMemo","UserAPI","userId","useParams","useState","editModal","setEditModal","deleteModal","setDeleteModal","selected","setSelected","handleEditOpen","useCallback","a","uId","get","id","requestData","useEffect","handleEditClose","push","handleEditConfirm","uData","apiData","email","firstName","lastName","phone","put","type","message","handleDeleteConfirm","result","delete","roleIdAdmin","Number","process","Paper","clsx","Modal","open","onClose","onUpdate","onCancel","isVisible","title","buttonTrueText","buttonFalseText","onFalse","onTrue","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","user","tableRow","hover","username","active","Chip","label","createdAt","IconButton","disabled","roleId","onClick","component","Link","to","green","grey","handleDeleteOpen","red","TablePagination","count","totalData","onChangePage","event","nPage","preventDefault","onChangeRowsPerPage","target","value","page","currentPage","rowsPerPage","rowsPerPageOptions"],"mappings":"4UAEaA,EAAkBC,aAAW,SAACC,GAAD,MAAiB,CAC1DC,KAAM,CACLC,UAAW,QAEZC,MAAO,CACNC,SAAU,MAEXC,OAAQ,GACRC,MAAO,O,iDCmOOC,uBA5MG,SAACC,GAAgB,IAC1BC,EAA6DD,EAA7DC,UAAWC,EAAkDF,EAAlDE,YAAaC,EAAqCH,EAArCG,KAAMC,EAA+BJ,EAA/BI,WAAYC,EAAmBL,EAAnBK,MAAOC,EAAYN,EAAZM,QAEnDC,EAAejB,IACbkB,EAAMC,cAAND,EAJyB,EAMLE,cAApBC,EANyB,EAMzBA,MAAOC,EANkB,EAMlBA,SACPC,EAAwBC,cAAxBD,oBACFE,EAAuBC,mBAAQ,kBAAM,IAAIC,IAAQN,KAAQ,CAACA,IAExDO,EAAWC,cAAXD,OAVyB,EAYCE,oBAAS,GAZV,mBAY1BC,EAZ0B,KAYfC,EAZe,OAaKF,oBAAS,GAbd,mBAa1BG,EAb0B,KAabC,EAba,OAeDJ,mBAAS,IAfR,mBAe1BK,EAf0B,KAehBC,EAfgB,KAiB3BC,GAAiBC,sBAAW,sBACjC,0CAAAC,EAAA,6DAAOC,EAAP,+BAAqB,GAArB,SACgCf,EAAYgB,IAAI,CAAEC,GAAIF,IADtD,QACOG,EADP,QAEiB9B,MACfmB,GAAa,GACbI,EAAYO,EAAY9B,MAAQ,MAEhCmB,GAAa,GACbI,EAAY,KAPd,2CAUA,CAACX,IAGFmB,qBAAU,WAKT,OAJIhB,GAAUN,EAAQ,KAAWM,GAChCS,GAAeT,GAGT,WACNI,GAAa,GACbE,GAAe,GACfE,EAAY,OAEX,IAEH,IAYMS,GAAkB,WACvBb,GAAa,GACbI,EAAY,IAEZpB,EAAQ8B,KAAK,UAGRC,GAAiB,uCAAG,4CAAAR,EAAA,6DAAOS,EAAP,+BAAuB,GAC1CC,EAAkB,CACvBC,MAAOF,EAAK,MACZG,UAAWH,EAAK,UAChBI,SAAUJ,EAAK,SACfK,MAAOL,EAAK,OAAa,IALD,SAOMvB,EAAY6B,IAAI,CAAEZ,GAAIP,EAAQ,IAAUc,GAP9C,OAOnBN,EAPmB,OAQzBpB,EAAoB,CAAEgC,KAAMZ,EAAYY,KAAMC,QAASb,EAAYa,UAE/Db,EAAY9B,OACfD,IACAoB,GAAa,IAZW,2CAAH,qDA0BjByB,GAAmB,uCAAG,WAAOC,GAAP,eAAAnB,EAAA,yDAC3BL,GAAe,IAEXwB,EAHuB,gCAIKjC,EAAYkC,OAAO,CAAEjB,GAAIP,EAAQ,KAJtC,OAIpBQ,EAJoB,OAK1BpB,EAAoB,CAAEgC,KAAMZ,EAAYY,KAAMC,QAASb,EAAYa,UAE/Db,EAAY9B,MACfD,IARyB,2CAAH,sDAanBgD,GAAc,WACnB,OAAOC,OAAOC,MAGf,OACC,eAACC,EAAA,EAAD,CAAOpD,UAAWqD,YAAK/C,EAAQd,KAAMQ,GAArC,UACC,cAACsD,EAAA,EAAD,CAAOC,KAAMnC,EAAWoC,QAAStB,GAAjC,SACC,qBAAKlC,UAAWqD,YAAK/C,EAAQd,KAAM,SAAnC,SACC,cAAC,IAAD,CAAUiE,SAAUrB,GAAmBsB,SAAUxB,GAAiBU,KAAK,SAAS1C,KAAMsB,QAIxF,cAAC,IAAD,CACCmC,UAAWrC,EACXsC,MAAOrD,EAAE,mBACTsC,QAAStC,EAAE,eACXsD,eAAgBtD,EAAE,mBAClBuD,gBAAiBvD,EAAE,kBACnBwD,QApCuB,WACzBxC,GAAe,GACfE,EAAY,KAmCVuC,OAAQlB,GACRF,KAAK,YAGN,eAACqB,EAAA,EAAD,CAAOjE,UAAWM,EAAQZ,MAAOwE,KAAK,QAAtC,UACC,cAACC,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UAAY9D,EAAE,mBACd,cAAC8D,EAAA,EAAD,UAAY9D,EAAE,mBACd,cAAC8D,EAAA,EAAD,UAAY9D,EAAE,gBACd,cAAC8D,EAAA,EAAD,UAAY9D,EAAE,gBACd,cAAC8D,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B/D,EAAE,iBAC7B,cAAC8D,EAAA,EAAD,UAAY9D,EAAE,oBACd,cAAC8D,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B/D,EAAE,sBAG/B,cAACgE,EAAA,EAAD,UACErE,EAAKsE,KAAI,SAACC,GAAD,OACT,eAACL,EAAA,EAAD,CAAUpE,UAAWM,EAAQoE,SAAUC,OAAK,EAA5C,UACC,eAACN,EAAA,EAAD,WACEI,EAAKjC,UADP,IACmBiC,EAAKhC,YAExB,cAAC4B,EAAA,EAAD,UAAYI,EAAKG,WACjB,cAACP,EAAA,EAAD,UAAYI,EAAKlC,QACjB,cAAC8B,EAAA,EAAD,UAAYI,EAAK/B,QACjB,cAAC2B,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACEG,EAAKI,OACL,cAACC,EAAA,EAAD,CAAM9E,UAAU,iBAAiB+E,MAAOxE,EAAE,iBAE1C,cAACuE,EAAA,EAAD,CAAM9E,UAAU,eAAe+E,MAAOxE,EAAE,qBAG1C,cAAC8D,EAAA,EAAD,UAAYI,EAAKO,YACjB,eAACX,EAAA,EAAD,CAAWC,MAAM,SAAjB,UACC,cAACW,EAAA,EAAD,CACCC,SAAUvE,EAAQ,KAAW8D,EAAK1C,IAAM0C,EAAKU,SAAWlC,KACxDmC,QAAS,kBAAM1D,GAAe+C,EAAK1C,KACnCsD,UAAWC,IACXC,GAAE,gBAAWd,EAAK1C,IAJnB,SAMC,cAAC,IAAD,CACC/B,UAAWqD,YAAK,CACfmC,MAAO7E,EAAQ,KAAW8D,EAAK1C,IAAM0C,EAAKU,SAAWlC,KACrDwC,KAAM9E,EAAQ,KAAW8D,EAAK1C,IAAM0C,EAAKU,SAAWlC,WAIvD,cAACgC,EAAA,EAAD,CACCC,SAAUvE,EAAQ,KAAW8D,EAAK1C,IAAM0C,EAAKU,SAAWlC,KACxDmC,QAAS,kBA3FQ,WAAuB,IAAtBvD,EAAqB,uDAAP,GACvCN,GAAe,GACfE,EAAY,CAAEM,GAAIF,IAyFI6D,CAAiBjB,EAAK1C,KAFtC,SAIC,cAAC,IAAD,CACC/B,UAAWqD,YAAK,CACfsC,IAAKhF,EAAQ,KAAW8D,EAAK1C,IAAM0C,EAAKU,SAAWlC,KACnDwC,KAAM9E,EAAQ,KAAW8D,EAAK1C,IAAM0C,EAAKU,SAAWlC,gBApCPwB,EAAK1C,YA6C1D,cAAC6D,EAAA,EAAD,CACCP,UAAU,MACVQ,MAAO1F,EAAW2F,WAAa,EAC/BC,aA/IsB,SAACC,EAAsCC,GAC/DD,EAAME,iBAENjG,EAAY,OAAQgG,EAAQ,IA6I1BE,oBA1I6B,SAACH,GAChC,IAAMI,EAA2BJ,EAAMI,OAEvCnG,EAAY,QAASiD,OAAOkD,EAAOC,SAwIjCC,MAAOnG,EAAWoG,aAAe,GAAK,EACtCC,YAAapG,EACbqG,mBAAoB,CAAC,GAAI,GAAI","file":"static/js/32.38ad3788.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/styles';\n\nexport const userTableStyles = makeStyles((theme: any) => ({\n\troot: {\n\t\toverflowX: 'auto',\n\t},\n\ttable: {\n\t\tminWidth: 1050,\n\t},\n\tdialog: {},\n\tmodal: {},\n}));\n","import React, { ChangeEvent, MouseEvent, useState, useEffect, useCallback, useMemo } from 'react';\n\nimport * as PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\n\nimport { Link, useParams, withRouter } from 'react-router-dom';\nimport {\n\tPaper,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableHead,\n\tTableRow,\n\tTablePagination,\n\tIconButton,\n\tModal,\n\tChip,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { userTableStyles } from './user-table.style';\n\nimport { UserForm } from '../../components';\nimport { ConfirmDialogComponent } from '../../../../components';\n\nimport { GetAuth } from '../../../../provider/authentication/authentication.provider';\nimport { GetSiteInformation } from '../../../../provider/site-information/site-information.provider';\nimport { UserAPI } from '../../../../api/user.api';\n\nconst UserTable = (props: any) => {\n\tconst { className, refreshData, data, pagination, limit, history } = props;\n\n\tconst classes: any = userTableStyles();\n\tconst { t } = useTranslation();\n\n\tconst { token, authData } = GetAuth();\n\tconst { setNotificationData } = GetSiteInformation();\n\tconst userRequest: UserAPI = useMemo(() => new UserAPI(token), [token]);\n\n\tconst { userId } = useParams<{ userId: string }>();\n\n\tconst [editModal, setEditModal] = useState(false);\n\tconst [deleteModal, setDeleteModal] = useState(false);\n\n\tconst [selected, setSelected] = useState({});\n\n\tconst handleEditOpen = useCallback(\n\t\tasync (uId: string = '') => {\n\t\t\tconst requestData: any = await userRequest.get({ id: uId });\n\t\t\tif (requestData.data) {\n\t\t\t\tsetEditModal(true);\n\t\t\t\tsetSelected(requestData.data || {});\n\t\t\t} else {\n\t\t\t\tsetEditModal(false);\n\t\t\t\tsetSelected({});\n\t\t\t}\n\t\t},\n\t\t[userRequest]\n\t);\n\n\tuseEffect(() => {\n\t\tif (userId && authData['id'] !== userId) {\n\t\t\thandleEditOpen(userId);\n\t\t}\n\n\t\treturn () => {\n\t\t\tsetEditModal(false);\n\t\t\tsetDeleteModal(false);\n\t\t\tsetSelected({});\n\t\t};\n\t}, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\tconst handlePageChange = (event: MouseEvent<HTMLButtonElement>, nPage: number) => {\n\t\tevent.preventDefault();\n\n\t\trefreshData('page', nPage + 1);\n\t};\n\n\tconst handleRowsPerPageChange = (event: ChangeEvent) => {\n\t\tconst target: HTMLInputElement = event.target as HTMLInputElement;\n\n\t\trefreshData('limit', Number(target.value));\n\t};\n\n\tconst handleEditClose = () => {\n\t\tsetEditModal(false);\n\t\tsetSelected({});\n\n\t\thistory.push('/user');\n\t};\n\n\tconst handleEditConfirm = async (uData: object = {}) => {\n\t\tconst apiData: object = {\n\t\t\temail: uData['email'],\n\t\t\tfirstName: uData['firstName'],\n\t\t\tlastName: uData['lastName'],\n\t\t\tphone: uData['phone'] || '',\n\t\t};\n\t\tconst requestData: any = await userRequest.put({ id: selected['id'] }, apiData);\n\t\tsetNotificationData({ type: requestData.type, message: requestData.message });\n\n\t\tif (requestData.data) {\n\t\t\trefreshData();\n\t\t\tsetEditModal(false);\n\t\t}\n\t};\n\n\tconst handleDeleteOpen = (uId: string = '') => {\n\t\tsetDeleteModal(true);\n\t\tsetSelected({ id: uId });\n\t};\n\n\tconst handleDeleteClose = () => {\n\t\tsetDeleteModal(false);\n\t\tsetSelected({});\n\t};\n\n\tconst handleDeleteConfirm = async (result: any) => {\n\t\tsetDeleteModal(false);\n\n\t\tif (result) {\n\t\t\tconst requestData: any = await userRequest.delete({ id: selected['id'] });\n\t\t\tsetNotificationData({ type: requestData.type, message: requestData.message });\n\n\t\t\tif (requestData.data) {\n\t\t\t\trefreshData();\n\t\t\t}\n\t\t}\n\t};\n\n\tconst roleIdAdmin = () => {\n\t\treturn Number(process.env.REACT_APP_ROLE_ID_ADMIN);\n\t};\n\n\treturn (\n\t\t<Paper className={clsx(classes.root, className)}>\n\t\t\t<Modal open={editModal} onClose={handleEditClose}>\n\t\t\t\t<div className={clsx(classes.root, 'modal')}>\n\t\t\t\t\t<UserForm onUpdate={handleEditConfirm} onCancel={handleEditClose} type=\"update\" data={selected} />\n\t\t\t\t</div>\n\t\t\t</Modal>\n\n\t\t\t<ConfirmDialogComponent\n\t\t\t\tisVisible={deleteModal}\n\t\t\t\ttitle={t('general.warning')}\n\t\t\t\tmessage={t('user.delete')}\n\t\t\t\tbuttonTrueText={t('general.confirm')}\n\t\t\t\tbuttonFalseText={t('general.cancel')}\n\t\t\t\tonFalse={handleDeleteClose}\n\t\t\t\tonTrue={handleDeleteConfirm}\n\t\t\t\ttype=\"warning\"\n\t\t\t/>\n\n\t\t\t<Table className={classes.table} size=\"small\">\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>{t('user.fullName')}</TableCell>\n\t\t\t\t\t\t<TableCell>{t('user.userName')}</TableCell>\n\t\t\t\t\t\t<TableCell>{t('user.email')}</TableCell>\n\t\t\t\t\t\t<TableCell>{t('user.phone')}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">{t('user.active')}</TableCell>\n\t\t\t\t\t\t<TableCell>{t('user.createdAt')}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"center\">{t('user.action')}</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{data.map((user: any) => (\n\t\t\t\t\t\t<TableRow className={classes.tableRow} hover key={user.id}>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t{user.firstName} {user.lastName}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{user.username}</TableCell>\n\t\t\t\t\t\t\t<TableCell>{user.email}</TableCell>\n\t\t\t\t\t\t\t<TableCell>{user.phone}</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t{user.active ? (\n\t\t\t\t\t\t\t\t\t<Chip className=\"green-bg white\" label={t('user.active')} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Chip className=\"red-bg white\" label={t('user.inactive')} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{user.createdAt}</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"center\">\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tdisabled={authData['id'] === user.id || user.roleId === roleIdAdmin()}\n\t\t\t\t\t\t\t\t\tonClick={() => handleEditOpen(user.id)}\n\t\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\t\tto={`/user/${user.id}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<EditIcon\n\t\t\t\t\t\t\t\t\t\tclassName={clsx({\n\t\t\t\t\t\t\t\t\t\t\tgreen: authData['id'] !== user.id && user.roleId !== roleIdAdmin(),\n\t\t\t\t\t\t\t\t\t\t\tgrey: authData['id'] === user.id || user.roleId === roleIdAdmin(),\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tdisabled={authData['id'] === user.id || user.roleId === roleIdAdmin()}\n\t\t\t\t\t\t\t\t\tonClick={() => handleDeleteOpen(user.id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<DeleteIcon\n\t\t\t\t\t\t\t\t\t\tclassName={clsx({\n\t\t\t\t\t\t\t\t\t\t\tred: authData['id'] !== user.id && user.roleId !== roleIdAdmin(),\n\t\t\t\t\t\t\t\t\t\t\tgrey: authData['id'] === user.id || user.roleId === roleIdAdmin(),\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t<TablePagination\n\t\t\t\tcomponent=\"div\"\n\t\t\t\tcount={pagination.totalData || 0}\n\t\t\t\tonChangePage={handlePageChange}\n\t\t\t\tonChangeRowsPerPage={handleRowsPerPageChange}\n\t\t\t\tpage={(pagination.currentPage || 1) - 1}\n\t\t\t\trowsPerPage={limit}\n\t\t\t\trowsPerPageOptions={[10, 20, 30]}\n\t\t\t/>\n\t\t</Paper>\n\t);\n};\n\nUserTable.propTypes = {\n\tclassName: PropTypes.string,\n\trefreshData: PropTypes.func.isRequired,\n\tdata: PropTypes.array.isRequired,\n\tlimit: PropTypes.number.isRequired,\n\tpagination: PropTypes.object.isRequired,\n};\n\nexport default withRouter(UserTable);\n"],"sourceRoot":""}