{"version":3,"sources":["views/account/account.style.tsx","views/account/components/index.tsx","views/account/account.view.tsx"],"names":["accountStyle","makeStyles","theme","root","padding","spacing","Profile","lazy","Password","withRouter","props","classes","t","useTranslation","GetAuth","token","authData","setAuthData","setNotificationData","GetSiteInformation","userRequest","UserAPI","useState","value","setValue","handleProfileUpdate","a","uData","apiData","email","firstName","lastName","phone","put","id","requestData","type","message","data","handlePasswordUpdate","password","md5","className","fallback","CircularProgress","loading","size","Tabs","onChange","event","newValue","persist","variant","Tab","label","index","onUpdate"],"mappings":"mOAEaA,EAAeC,aAAW,SAACC,GAAD,MAAiB,CACvDC,KAAM,CACLC,QAASF,EAAMG,QAAQ,Q,iCCFZC,EAAUC,gBAAK,kBAAM,6EACrBC,EAAWD,gBAAK,kBAAM,6E,OC0EpBE,uBA5DC,SAACC,GAChB,IAAMC,EAAeX,IACbY,EAAMC,cAAND,EAFuB,EAIUE,cAAjCC,EAJuB,EAIvBA,MAAOC,EAJgB,EAIhBA,SAAUC,EAJM,EAINA,YACjBC,EAAwBC,cAAxBD,oBAEFE,EAAuB,IAAIC,IAAQN,GAPV,EASLO,mBAAS,GATJ,mBASxBC,EATwB,KASjBC,EATiB,KAiBzBC,EAAmB,uCAAG,4CAAAC,EAAA,6DAAOC,EAAP,+BAAuB,GAC5CC,EAAkB,CACvBC,MAAOF,EAAK,MACZG,UAAWH,EAAK,UAChBI,SAAUJ,EAAK,SACfK,MAAOL,EAAK,OAAa,IALC,SAQIP,EAAYa,IAAI,CAAEC,GAAIlB,EAAQ,IAAUY,GAR5C,OAQrBO,EARqB,OAS3BjB,EAAoB,CAAEkB,KAAMD,EAAYC,KAAMC,QAASF,EAAYE,UAE/DF,EAAYG,MACfrB,IAZ0B,2CAAH,qDAgBnBsB,EAAoB,uCAAG,4CAAAb,EAAA,6DAAOC,EAAP,+BAAuB,GAC7CC,EAAkB,CACvBY,SAAUC,EAAId,EAAK,WAFQ,SAKGP,EAAYa,IAAI,CAAEC,GAAIlB,EAAQ,IAAUY,GAL3C,OAKtBO,EALsB,OAM5BjB,EAAoB,CAAEkB,KAAMD,EAAYC,KAAMC,QAASF,EAAYE,UANvC,2CAAH,qDAS1B,OACC,qBAAKK,UAAW/B,EAAQR,KAAxB,SACC,eAAC,WAAD,CAAUwC,SAAU,cAACC,EAAA,EAAD,CAAkBF,UAAW/B,EAAQkC,QAASC,KAAM,KAAxE,UACC,eAACC,EAAA,EAAD,CAAMxB,MAAOA,EAAOyB,SAlCF,SAACC,EAAoBC,GACzCD,EAAME,UAEN3B,EAAS0B,IA+BqCE,QAAQ,YAApD,UACC,cAACC,EAAA,EAAD,CAAKC,MAAO1C,EAAE,mBAAoBsB,GAAG,UACrC,cAACmB,EAAA,EAAD,CAAKC,MAAO1C,EAAE,oBAAqBsB,GAAG,aAEvC,cAAC,IAAD,CAAoBX,MAAOA,EAAOgC,MAAO,EAAzC,SACC,cAACjD,EAAD,CAASkD,SAAU/B,EAAqBa,KAAMtB,MAE/C,cAAC,IAAD,CAAoBO,MAAOA,EAAOgC,MAAO,EAAzC,SACC,cAAC/C,EAAD,CAAUgD,SAAUjB","file":"static/js/31.1fd6fc95.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/styles';\n\nexport const accountStyle = makeStyles((theme: any) => ({\n\troot: {\n\t\tpadding: theme.spacing(3),\n\t},\n}));\n","import { lazy } from 'react';\n\nexport const Profile = lazy(() => import('./profile/profile.component'));\nexport const Password = lazy(() => import('./password/password.component'));\n","import React from 'react';\nimport * as md5 from 'md5';\n\nimport { ChangeEvent, useState, Suspense } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { CircularProgress, Tabs, Tab } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { accountStyle } from './account.style';\n\nimport { GetAuth } from '../../provider/authentication/authentication.provider';\nimport { GetSiteInformation } from '../../provider/site-information/site-information.provider';\nimport { UserAPI } from '../../api/user.api';\n\nimport { TabPannelComponent } from '../../components';\nimport { Profile, Password } from './components';\n\nconst Account = (props: any) => {\n\tconst classes: any = accountStyle();\n\tconst { t } = useTranslation();\n\n\tconst { token, authData, setAuthData } = GetAuth();\n\tconst { setNotificationData } = GetSiteInformation();\n\n\tconst userRequest: UserAPI = new UserAPI(token);\n\n\tconst [value, setValue] = useState(0);\n\n\tconst handleChange = (event: ChangeEvent, newValue: number) => {\n\t\tevent.persist();\n\n\t\tsetValue(newValue);\n\t};\n\n\tconst handleProfileUpdate = async (uData: object = {}) => {\n\t\tconst apiData: object = {\n\t\t\temail: uData['email'],\n\t\t\tfirstName: uData['firstName'],\n\t\t\tlastName: uData['lastName'],\n\t\t\tphone: uData['phone'] || '',\n\t\t};\n\n\t\tconst requestData: any = await userRequest.put({ id: authData['id'] }, apiData);\n\t\tsetNotificationData({ type: requestData.type, message: requestData.message });\n\n\t\tif (requestData.data) {\n\t\t\tsetAuthData();\n\t\t}\n\t};\n\n\tconst handlePasswordUpdate = async (uData: object = {}) => {\n\t\tconst apiData: object = {\n\t\t\tpassword: md5(uData['password']),\n\t\t};\n\n\t\tconst requestData: any = await userRequest.put({ id: authData['id'] }, apiData);\n\t\tsetNotificationData({ type: requestData.type, message: requestData.message });\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Suspense fallback={<CircularProgress className={classes.loading} size={60} />}>\n\t\t\t\t<Tabs value={value} onChange={handleChange} variant=\"fullWidth\">\n\t\t\t\t\t<Tab label={t('account.profile')} id=\"tab-0\" />\n\t\t\t\t\t<Tab label={t('account.password')} id=\"tab-1\" />\n\t\t\t\t</Tabs>\n\t\t\t\t<TabPannelComponent value={value} index={0}>\n\t\t\t\t\t<Profile onUpdate={handleProfileUpdate} data={authData} />\n\t\t\t\t</TabPannelComponent>\n\t\t\t\t<TabPannelComponent value={value} index={1}>\n\t\t\t\t\t<Password onUpdate={handlePasswordUpdate} />\n\t\t\t\t</TabPannelComponent>\n\t\t\t</Suspense>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(Account);\n"],"sourceRoot":""}